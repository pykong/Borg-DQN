version: '3.8'

services:
  # Zookeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network
    restart: always

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
    restart: always

  # Redis service
  redis:
    image: 'redis:latest'
    container_name: 'redis'
    command: redis-server --save 300 1 --dir /data --dbfilename redis.rdb --appendonly no
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - redis-network
    restart: always

  # Environment-Agent service
  env_agent:
    build:
      context: ./env_agent
      dockerfile: Dockerfile
      target: production
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - CONFIG_log_level=ERROR
    networks:
      - kafka-network
      - redis-network
    volumes:
      - model_store:/usr/share/model_store
    depends_on:
      - zookeeper
      - kafka
      - redis

  # Memory-Monitor service
  mem_monitor:
    build:
      context: ./mem_monitor
      dockerfile: Dockerfile
      target: production
    networks:
      - kafka-network
      - redis-network
    depends_on:
      - zookeeper
      - kafka
      - redis
    restart: always


networks:
  kafka-network:
    driver: bridge
  redis-network:
    driver: bridge

volumes:
  model_store:
    driver: local
  redis-data:
    driver: local
